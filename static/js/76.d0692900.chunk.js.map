{"version":3,"file":"static/js/76.d0692900.chunk.js","mappings":"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","sources":["three-components/islandBase.js","three-components/generateRocks.js","three-components/generateXmasTrees.js","three-components/lighthouse.js","three-components/smallIsland.js","three-components/generateBigTreeCanopy.js","three-components/generateBigTree.js","three-components/bigIsland.js","three-components/cloud.js","components/home.js"],"sourcesContent":["// colors: yellowgreen, #5bb303(a lil darker), \nconst IslandBase = ({ rotation, position1, position2, args1, args2 }) => {\n    return (\n        <group rotation={rotation}>\n            <mesh receiveShadow position={position1} >\n                <cylinderGeometry receiveShadow attach=\"geometry\" args={args1} />\n                <meshStandardMaterial attach=\"material\" metalness={[0.5]}\n                    roughness={[0.5]} color=\"#5bb303\" />\n            </mesh>\n\n            <mesh position={position2} >\n                <cylinderGeometry attach=\"geometry\" args={args2} />\n                <meshStandardMaterial attach=\"material\" metalness={[0.5]}\n                    roughness={[0.5]} color=\"#c56a4b\" />\n            </mesh>\n        </group>\n    )\n}\n\nexport default IslandBase;","import React, { useMemo } from \"react\";\nimport * as THREE from \"three\";\n\n/** #b79779 #c76e4e  */\n\n\nconst GenerateRocks = ({ args, position, scale }) => {\n        //memoizing to reuse the geometry\n        const rockGeom = useMemo(() => new THREE.DodecahedronBufferGeometry(0.5), []); //args={[0.5]}\n        const rockMat = useMemo(() => new THREE.MeshStandardMaterial(), []);\n    \n        //definining material roughness and metalness\n        rockMat.roughness = 0.5;\n        rockMat.metalness = 0.5;\n        rockMat.color = new THREE.Color(\"#dbf1f1\");\n\n    return (\n        <>\n                    {/**Generating the falling rocks */}\n            <mesh \n                position={[-0.5, -1, 0.4]} \n                scale={[0.8, 0.8, 0.8]}\n                geometry={rockGeom}\n                material={rockMat}    \n            />\n            <mesh \n                position={[0.85, -0.1, 0.7]} \n                scale={[0.6, 0.6, 0.6]}\n                geometry={rockGeom}\n                material={rockMat}    \n            />\n            <mesh \n                position={[-0.5, -2.5, 0.6]} \n                scale={[0.25, 0.25, 0.25]}\n                geometry={rockGeom}\n                material={rockMat}    \n            />\n            <mesh \n                position={[0, -2, 0]} \n                scale={[0.35, 0.4, 0.35]}\n                geometry={rockGeom}\n                material={rockMat}    \n            />\n            <mesh \n                position={[0.7, -1.5, 0.4]} \n                scale={[0.15, 0.15, 0.25]}\n                geometry={rockGeom}\n                material={rockMat}    \n            />\n            <mesh \n                position={[0.5, -1.75, -1]} \n                scale={[0.15, 0.15, 0.25]}\n                geometry={rockGeom}\n                material={rockMat}    \n            />\n        </>\n    )\n}\n\n/**\n *             <mesh position={position} scale={scale} >\n                <dodecahedronBufferGeometry attach=\"geometry\" args={[0.5]} />\n                <meshStandardMaterial attach=\"material\" metalness={[0.5]}\n                    roughness={[0.5]} color=\"#dbf1f1\" />\n            </mesh>\n */\n//#a2a2a0  grey, original\nexport default GenerateRocks;","const GenerateXmasTrees = ({ position }) => {\n    return (\n        <group position={position} rotation={[Math.PI / 15, 0, 0]}>\n            <mesh castShadow position={[0, -0.25, -0.05]}  >\n                <coneBufferGeometry attach=\"geometry\" args={[0.08, 0.3, 4]} />\n                <meshStandardMaterial attach=\"material\" metalness={[0.1]}\n                    roughness={[0.5]} color=\"#5bb303\" />\n            </mesh>\n            <mesh castShadow position={[0, -0.1, -0.05]} >\n                <coneBufferGeometry attach=\"geometry\" args={[0.055, 0.3, 4]} />\n                <meshStandardMaterial attach=\"material\" metalness={[0.1]}\n                    roughness={[0.5]} color=\"#5bb303\" />\n            </mesh>\n            <mesh castShadow position={[0, -0.35, -0.05]}  >\n                <coneBufferGeometry attach=\"geometry\" args={[0.055, 0.3, 4]} />\n                <meshStandardMaterial attach=\"material\" metalness={[0.1]}\n                    roughness={[0.5]} color=\"brown\" />\n            </mesh>\n        </group>\n    )\n}\n//green, original\nexport default GenerateXmasTrees;","const Lighthouse = () => {\n\n    return (\n        <group >\n            <mesh position={[1.75, -1.35, -0.5]} rotation={[Math.PI / 15, 0, 0]}  >\n                <cylinderBufferGeometry attach=\"geometry\" args={[0.2, 0.2, 0.1]} />\n                <meshStandardMaterial attach=\"material\" metalness={[0.5]}\n                    roughness={[0.5]} color=\"brown\" />\n            </mesh>\n            <mesh position={[1.75, -1.35, -0.5]} rotation={[Math.PI / 15, 0, 0]}  >\n                <cylinderBufferGeometry attach=\"geometry\" args={[0.17, 0.2, 0.4]} />\n                <meshStandardMaterial attach=\"material\" metalness={[0.5]}\n                    roughness={[0.5]} color=\"white\" />\n            </mesh>\n            <mesh position={[1.75, -1.12, -0.45]} rotation={[Math.PI / 15, 0, 0]}  >\n                <cylinderBufferGeometry attach=\"geometry\" args={[0.18, 0.18, 0.05]} />\n                <meshStandardMaterial attach=\"material\" metalness={[0.5]}\n                    roughness={[0.5]} color=\"brown\" />\n            </mesh>\n            <mesh position={[1.75, -1.05, -0.43]} rotation={[Math.PI / 15, 0, 0]}  >\n                <cylinderBufferGeometry attach=\"geometry\" args={[0.16, 0.17, 0.23]} />\n                <meshStandardMaterial attach=\"material\" metalness={[0.5]}\n                    roughness={[0.5]} color=\"#ffdf00\" />\n            </mesh>\n            <mesh position={[1.75, -1.05, -0.43]} rotation={[Math.PI / 15, 0, 0]}  >\n                <cylinderBufferGeometry attach=\"geometry\" args={[0.17, 0.18, 0.2]} />\n                <meshStandardMaterial attach=\"material\" metalness={[0.5]}\n                    roughness={[0.5]} wireframe wireframeLinewidth={10} color=\"brown\" />\n            </mesh>\n            <mesh position={[1.75, -0.95, -0.415]} rotation={[Math.PI / 15, 0, 0]}  >\n                <cylinderBufferGeometry attach=\"geometry\" args={[0.18, 0.18, 0.03]} />\n                <meshStandardMaterial attach=\"material\" metalness={[0.5]}\n                    roughness={[0.5]} color=\"brown\" />\n            </mesh>\n            <mesh position={[1.75, -0.9, -0.39]} rotation={[Math.PI / 15, 0, 0]}  >\n                <sphereGeometry attach=\"geometry\" args={[0.16, 10, 16]} />\n                <meshStandardMaterial attach=\"material\" metalness={[0.5]}\n                    roughness={[0.5]} color=\"brown\" />\n            </mesh>\n            <mesh position={[1.75, -0.72, -0.345]} rotation={[Math.PI / 15, 0, 0]}  >\n                <sphereGeometry attach=\"geometry\" args={[0.03, 10, 16]} />\n                <meshStandardMaterial attach=\"material\" metalness={[0.5]}\n                    roughness={[0.5]} color=\"brown\" />\n            </mesh>\n        </group>\n    )\n}\n\nexport default Lighthouse;","import IslandBase from \"./islandBase\";\nimport GenerateRocks from \"./generateRocks\";\nimport GenerateXmasTrees from \"./generateXmasTrees\";\nimport Lighthouse from \"./lighthouse\";\n\nconst SmallIsland = () => {\n    return (\n        <group>\n            <IslandBase rotation={[Math.PI / 12, -Math.PI / 10, 0]} position1={[1.75, -1.5, -0.6]} position2={[1.75, -1.75, -0.6]} args1={[.5, .5, 0.1, 8]} args2={[.5, 0.2, 0.5, 8]} />\n\n\n            <GenerateXmasTrees position={[2, -1, -0.1]} />\n            <GenerateXmasTrees position={[1.5, -0.95, -0.3]} />\n\n            <Lighthouse />\n\n            {/**The single falling rock below small island */}\n            <mesh position={[2, -2, 0]} scale={[0.15, 0.15, 0.15]} >\n                <dodecahedronBufferGeometry attach=\"geometry\" args={[0.5]} />\n                <meshStandardMaterial \n                    attach=\"material\" \n                    metalness={[0.5]}\n                    roughness={[0.5]} \n                    color=\"#dbf1f1\"\n                />\n            </mesh>\n        </group>\n    )\n}\n\nexport default SmallIsland;","import { GradientTexture } from '@react-three/drei';\n\nconst GenerateBigTreeCanopy = () => {\n\n\n    return (\n        <group>\n\n            <mesh castShadow position={[0, 1.2, 0]} scale={[0.8, 0.5, 0.6]} >\n                <dodecahedronBufferGeometry attach=\"geometry\" args={[0.5]} />\n                <meshStandardMaterial attach=\"material\" metalness={[0.5]}\n                    roughness={[0.5]}>\n                    <GradientTexture\n                        stops={[0, 0.5]} // As many stops as you want between 0.0 to 1.0\n                        colors={['pink', 'hotpink']} // Colors need to match the number of stops\n                        size={1024} \n                    />\n                </meshStandardMaterial>\n            </mesh>\n            <mesh position={[0.4, 1.2, 0]} scale={[0.8, 0.5, 0.45]} rotation={[Math.PI / 3, 0, 0]} >\n                <icosahedronBufferGeometry attach=\"geometry\" args={[0.5]} />\n                <meshStandardMaterial attach=\"material\" metalness={[0.5]}\n                    roughness={[0.5]} >\n                    <GradientTexture\n                        stops={[0, 0.75]} \n                        colors={['pink', 'hotpink']} \n                        size={1024} \n                    />\n                </meshStandardMaterial>\n            </mesh>\n\n            <mesh position={[0, 1.4, -0.4]} scale={[0.8, 0.5, 0.6]} rotation={[Math.PI / 4, Math.PI / 3, 0]}>\n                <icosahedronBufferGeometry attach=\"geometry\" args={[0.5]} />\n                <meshStandardMaterial attach=\"material\" metalness={[0.5]}\n                    roughness={[0.5]} >\n                    <GradientTexture\n                        stops={[0, 0.75]}\n                        colors={['pink', 'hotpink']} \n                    />\n                </meshStandardMaterial>\n            </mesh>\n            <mesh position={[-0.5, 1.4, -0.4]} scale={[0.8, 0.5, 0.6]} rotation={[Math.PI / 1, 0, 0]}>\n                <icosahedronBufferGeometry attach=\"geometry\" args={[0.5]} />\n                <meshStandardMaterial attach=\"material\" metalness={[0.5]}\n                    roughness={[0.5]} >\n                    <GradientTexture\n                        stops={[0, 0.9]} \n                        colors={['pink', 'hotpink']} \n                    />\n                </meshStandardMaterial>\n            </mesh>\n            <mesh position={[-0.6, 1.1, -0.4]} scale={[0.8, 0.2, 0.6]} rotation={[Math.PI / 3, 0, 0]}>\n                <icosahedronBufferGeometry attach=\"geometry\" args={[0.6]} />\n                <meshStandardMaterial attach=\"material\" metalness={[0.5]}\n                    roughness={[0.5]} >\n                    <GradientTexture\n                        stops={[0, 0.2]} \n                        colors={['pink', 'hotpink']} \n                        size={1024} \n                    />\n                </meshStandardMaterial>\n            </mesh>\n\n            <mesh position={[-0.5, 1.3, -0.1]} scale={[0.8, 0.5, 0.6]} rotation={[0, 0, 0]}>\n                <icosahedronBufferGeometry attach=\"geometry\" args={[0.2]} />\n                <meshStandardMaterial attach=\"material\" metalness={[0.5]}\n                    roughness={[0.5]} >\n                    <GradientTexture\n                        stops={[0, 0.5]} \n                        colors={['pink', 'hotpink']} \n                        size={1024} \n                    />\n                </meshStandardMaterial>\n            </mesh>\n            <mesh position={[0.2, 1.1, 0.2]} scale={[0.8, 0.5, 0.6]} rotation={[0, Math.PI / 5, 0]}>\n                <icosahedronBufferGeometry attach=\"geometry\" args={[0.3]} />\n                <meshStandardMaterial attach=\"material\" metalness={[0.5]}\n                    roughness={[0.5]} >\n                    <GradientTexture\n                        stops={[0, 0.75]} \n                        colors={['pink', 'hotpink']} \n                        size={1024} \n                    />\n                </meshStandardMaterial>\n            </mesh>\n            <mesh position={[-0.4, 1.2, -0.1]} scale={[0.8, 0.5, 0.6]} rotation={[Math.PI / 8, 0, 0]}>\n                <icosahedronBufferGeometry attach=\"geometry\" args={[0.3]} />\n                <meshStandardMaterial attach=\"material\" metalness={[0.5]}\n                    roughness={[0.5]} >\n                    <GradientTexture\n                        stops={[0, 0.75]} \n                        colors={['pink', 'hotpink']} \n                        size={1024} \n                    />\n                </meshStandardMaterial>\n            </mesh>\n            <mesh position={[-0.2, 1.1, 0.1]} scale={[0.5, 0.5, 0.5]} rotation={[Math.PI / 9, 0, 0]}>\n                <icosahedronBufferGeometry attach=\"geometry\" args={[0.3]} />\n                <meshStandardMaterial attach=\"material\" metalness={[0.5]}\n                    roughness={[0.5]} >\n                    <GradientTexture\n                        stops={[0, 0.5]} \n                        colors={['pink', 'hotpink']} \n                        size={1024} \n                    />\n                </meshStandardMaterial>\n            </mesh>\n            <mesh position={[-0.4, 1, -0.1]} scale={[0.8, 0.7, 0.6]} rotation={[Math.PI / 2, 0, 0]}>\n                <icosahedronBufferGeometry attach=\"geometry\" args={[0.3]} />\n                <meshStandardMaterial attach=\"material\" metalness={[0.5]}\n                    roughness={[0.5]} >\n                    <GradientTexture\n                        stops={[0, 0.3]}\n                        colors={['pink', 'hotpink']} \n                        size={1024} \n                    />\n                </meshStandardMaterial>\n            </mesh>\n            <mesh position={[-0.8, 0.8, -0.25]} scale={[0.5, 0.3, 0.5]} rotation={[0, Math.PI / 9, 0]}>\n                <icosahedronBufferGeometry attach=\"geometry\" args={[0.4]} />\n                <meshStandardMaterial attach=\"material\" metalness={[0.5]}\n                    roughness={[0.5]} >\n                    <GradientTexture\n                        stops={[0, 0.75]} \n                        colors={['pink', 'hotpink']} \n                        size={1024} \n                    />\n                </meshStandardMaterial>\n            </mesh>\n\n            {/** bottom part */}\n            <mesh castShadow position={[-0.2, 0.5, 0.4]} scale={[0.5, 0.3, 0.3]} rotation={[Math.PI / 6, Math.PI / 6, 0]}>\n                <icosahedronBufferGeometry attach=\"geometry\" args={[0.6]} />\n                <meshStandardMaterial attach=\"material\" metalness={[0.5]}\n                    roughness={[0.5]} >\n                    <GradientTexture\n                        stops={[0, 0.1]}\n                        colors={['pink', 'hotpink']} \n                        size={1024}\n                    />\n                </meshStandardMaterial>\n            </mesh>\n\n            {/**back branch */}\n            <mesh castShadow position={[0.3, 0.8, -0.3]} scale={[0.4, 0.3, 0.3]} rotation={[Math.PI / 6, Math.PI / 6, 0]}>\n                <icosahedronBufferGeometry attach=\"geometry\" args={[0.8]} />\n                <meshStandardMaterial attach=\"material\" metalness={[0.5]}\n                    roughness={[0.5]} >\n                    <GradientTexture\n                        stops={[0, 0.5]} \n                        colors={['pink', 'hotpink']} \n                        size={1024}\n                    />\n                </meshStandardMaterial>\n            </mesh>\n            <mesh position={[0.1, 0.7, -0.1]} scale={[0.4, 0.3, 0.3]} rotation={[Math.PI / 6, Math.PI / 6, 0]}>\n                <icosahedronBufferGeometry attach=\"geometry\" args={[0.3]} />\n                <meshStandardMaterial attach=\"material\" metalness={[0.5]}\n                    roughness={[0.5]} >\n                    <GradientTexture\n                        stops={[0, 0.3]} \n                        colors={['pink', 'hotpink']} \n                        size={1024} // \n                    />\n                </meshStandardMaterial>\n            </mesh>\n            <mesh castShadow position={[0.1, 0.8, 0]} scale={[0.6, 0.3, 0.3]} rotation={[Math.PI / 6, Math.PI / 6, 0]}>\n                <icosahedronBufferGeometry attach=\"geometry\" args={[0.4]} />\n                <meshStandardMaterial attach=\"material\" metalness={[0.5]}\n                    roughness={[0.5]} >\n                    <GradientTexture\n                        stops={[0, 0.1]} \n                        colors={['pink', 'hotpink']} \n                        size={1024} \n                    />\n                </meshStandardMaterial>\n            </mesh>\n\n            <mesh position={[-0.3, 0.35, 0.6]} scale={[0.3, 0.3, 0.3]} rotation={[Math.PI / 6, 0, 0]}>\n                <icosahedronBufferGeometry attach=\"geometry\" args={[0.4]} />\n                <meshStandardMaterial attach=\"material\" metalness={[0.5]}\n                    roughness={[0.5]} >\n                    <GradientTexture\n                        stops={[0, 0.4]} \n                        colors={['pink', 'hotpink']} \n                        size={1024} \n                    />\n                </meshStandardMaterial>\n            </mesh>\n\n            <mesh position={[-0.13, 0.7, 0.4]} scale={[0.3, 0.3, 0.3]} rotation={[Math.PI / 6, 0, 0]}>\n                <icosahedronBufferGeometry attach=\"geometry\" args={[0.2]} />\n                <meshStandardMaterial attach=\"material\" metalness={[0.5]}\n                    roughness={[0.5]} >\n                    <GradientTexture\n                        stops={[0, 0.2]} \n                        colors={['pink', 'hotpink']} \n                        size={1024} \n                    />\n                </meshStandardMaterial>\n            </mesh>\n            <mesh position={[-0.3, 0.3, 0.1]} scale={[0.5, 0.3, 0.3]} rotation={[Math.PI / 6, 0, 0]}>\n                <icosahedronBufferGeometry attach=\"geometry\" args={[0.4]} />\n                <meshStandardMaterial attach=\"material\" metalness={[0.5]}\n                    roughness={[0.5]} >\n                    <GradientTexture\n                        stops={[0, 0.1]} \n                        colors={['pink', 'hotpink']} \n                        size={1024} \n                    />\n                </meshStandardMaterial>\n            </mesh>\n\n            {/** bottom most */}\n            <mesh castShadow position={[0.3, 0.3, -0.2]} scale={[0.7, 0.5, 0.5]} rotation={[Math.PI / 4, 0, 0]}>\n                <icosahedronBufferGeometry attach=\"geometry\" args={[0.3]} />\n                <meshStandardMaterial attach=\"material\" metalness={[0.5]}\n                    roughness={[0.5]} >\n                    <GradientTexture\n                        stops={[0, 0.2]} \n                        colors={['pink', 'hotpink']}\n                        size={1024} \n                    />\n                </meshStandardMaterial>\n            </mesh>\n            <mesh castShadow position={[0.2, 0.25, 0]} scale={[0.5, 0.5, 0.5]} rotation={[Math.PI / 2, 0, 0]}>\n                <icosahedronBufferGeometry attach=\"geometry\" args={[0.2]} />\n                <meshStandardMaterial attach=\"material\" metalness={[0.5]}\n                    roughness={[0.5]} >\n                    <GradientTexture\n                        stops={[0, 0.3]} \n                        colors={['pink', 'hotpink']} \n                        size={1024} \n                    />\n                </meshStandardMaterial>\n            </mesh>\n            <mesh position={[0.2, 0.35, 0]} scale={[0.5, 0.5, 0.5]} rotation={[Math.PI / 2, 0, 0]}>\n                <icosahedronBufferGeometry attach=\"geometry\" args={[0.15]} />\n                <meshStandardMaterial attach=\"material\" metalness={[0.5]}\n                    roughness={[0.5]} >\n                    <GradientTexture\n                        stops={[0, 0.3]} \n                        colors={['pink', 'hotpink']} \n                        size={1024} \n                    />\n                </meshStandardMaterial>\n            </mesh>\n\n            <mesh castShadow position={[0.1, 0.5, 0.1]} scale={[0.5, 0.5, 0.5]} rotation={[Math.PI / 2, 0, 0]}>\n                <icosahedronBufferGeometry attach=\"geometry\" args={[0.1]} />\n                <meshStandardMaterial attach=\"material\" metalness={[0.5]}\n                    roughness={[0.5]} >\n                    <GradientTexture\n                        stops={[0, 0.3]} \n                        colors={['pink', 'hotpink']}\n                        size={1024} \n                    />\n                </meshStandardMaterial>\n            </mesh>\n        </group>\n    )\n}\n\nexport default GenerateBigTreeCanopy;","import * as THREE from \"three\"\nimport GenerateBigTreeCanopy from \"./generateBigTreeCanopy\";\n\nclass CustomSinCurve extends THREE.Curve {\n\n    constructor(scale = 1) {\n        super();\n        this.scale = scale;\n    }\n\n    getPoint(t, optionalTarget = new THREE.Vector3()) {\n        const tx = t * 3 - 1.5;\n        const ty = Math.sin(2 * Math.PI * t);\n        const tz = 0;\n\n        return optionalTarget.set(tx, ty, tz).multiplyScalar(this.scale);\n    }\n\n}\n\n//curved paths used to generate tubeGeometry. USed tubeGeometry to make \n// 2 curved branches on the big pink tree.\nconst path = new CustomSinCurve(0.2);\nconst path2 = new CustomSinCurve(0.3);\n\nconst GenerateBigTree = () => {\n    return (\n        <group position={[-0.9, 0.9, 0.9]} rotation={[Math.PI / 10, 0, 0]} >\n           {/**Trunk mesh */}\n            <mesh castShadow receiveShadow >\n                <cylinderBufferGeometry attach=\"geometry\" args={[0.06, 0.15, 2]} />\n                <meshStandardMaterial attach=\"material\" metalness={[0.1]}\n                    roughness={[0.5]} color=\"#c4936c\" />\n            </mesh>\n            \n            {/**curved branches meshes */}\n            <mesh castShadow position={[0, 0.3, 0]} rotation={[0, Math.PI / 9, 0]} >\n                <tubeBufferGeometry attach=\"geometry\" args={[path, 70, 0.02, 50, false]} />\n                <meshLambertMaterial attach=\"material\" metalness={[0.1]}\n                    roughness={[0.5]} color=\"#c4936c\" />\n            </mesh>\n            <mesh castShadow position={[0, 0.7, 0]} rotation={[0, Math.PI + Math.PI / 2.5, 0]} >\n                <tubeBufferGeometry attach=\"geometry\" args={[path2, 70, 0.02, 50, false]} />\n                <meshLambertMaterial attach=\"material\" metalness={[0.1]}\n                    roughness={[0.5]} color=\"#c4936c\" />\n            </mesh>\n\n            <GenerateBigTreeCanopy />\n        </group>\n    )\n}\n\nexport default GenerateBigTree;","import React from \"react\";\n\nimport IslandBase from \"./islandBase\";\nimport GenerateRocks from \"./generateRocks\";\nimport GenerateBigTree from \"./generateBigTree\";\n\nconst BigIsland = () => {\n\n    return (\n        <group>\n            <IslandBase \n                rotation={[Math.PI / 6, 0, 0]} \n                position1={[0, 1, 0]} \n                position2={[0, 0, 0]} \n                args1={[1.5, 1.5, 0.1, 12]} \n                args2={[1.5, 0.9, 2, 12]} \n            />\n            <GenerateBigTree />\n            <GenerateRocks />\n        </group>\n    )\n}\n\nexport default BigIsland;","import { useMemo } from \"react\";\nimport * as THREE from \"three\";\n\nconst Cloud = ({ position }) => {\n\n    //memoizing to reuse the geometry\n    const geometry = useMemo(() => new THREE.DodecahedronBufferGeometry(0.5), []); //args={[0.5]}\n    const material = useMemo(() => new THREE.MeshStandardMaterial(), []);\n\n    //definining material roughness and metalness\n    material.roughness = 0.5;\n    material.metalness = 0.5;\n\n    //generatng a group of 3 dodecahedrons to make a single cloud\n    return (\n        <group position={position}>\n            <mesh position={[0, 0, 0]} scale={[0.6, 0.6, 0.6]} \n                geometry={geometry}\n                material={material}    \n            />\n\n            <mesh position={[-0.3, 0, 0]} scale={[0.3, 0.3, 0.3]}\n                geometry={geometry}\n                material={material}    \n                />\n\n            <mesh position={[0.3, 0, 0]} scale={[0.4, 0.4, 0.4]} \n                geometry={geometry}\n                material={material}    \n                />\n        </group>\n    )\n}\n\nexport default Cloud;","import React, { useMemo, Suspense } from \"react\";\nimport { Canvas, extend } from '@react-three/fiber';\nimport { Sky } from '@react-three/drei';\nimport { FontLoader } from 'three/examples/jsm/loaders/FontLoader';\nimport { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry';\nimport * as THREE from \"three\";\n\nimport SmallIsland from \"../three-components/smallIsland\";\nimport BigIsland from \"../three-components/bigIsland\";\nimport Cloud from \"../three-components/cloud\";\n\nimport ArchivoBlack from '../assets/ArchivoBlack.json';\nimport Loading from \"./loading\";\n\n\nextend({ TextGeometry });\n\n\nfunction Home() {\n\n    const font = new FontLoader().parse(ArchivoBlack);\n\n    //memoizing to reuse the geometry\n    const spinnerGeom = useMemo(() => new THREE.PlaneBufferGeometry(0.5), []); //args={[0.5]}\n    const spinnerMat = useMemo(() => new THREE.MeshStandardMaterial(), []);\n\n    //definining material roughness and metalness\n    spinnerMat.roughness = 0.5;\n    spinnerMat.metalness = 0.5;\n    return (\n        <>\n            {/**Suspense fallback for loader screen */}\n            <Suspense fallback={<Loading />} >\n                <Canvas\n                    gl={{ antialias: true, alpha: false }}\n                    style={{ height: `1000px` }}\n                    colorManagement\n                    shadows\n                    dpr={window.devicePixelRatio}\n                    performance={{ min: 0.5 }}\n                >\n                    <fog attach=\"fog\" args={[\"white\", 3, 10]} />\n\n                    <ambientLight intensity={[0.5]} />\n                    <spotLight\n                        castShadow\n                        position={[2, 3, 4]}\n                        angle={0.6}\n                    />\n\n                    <Sky\n                        sunPosition={[5, 4, 8]}\n                        azimuth={0.25}\n                    />\n\n                    <SmallIsland receiveShadow />\n                    <BigIsland receiveShadow />\n\n                    <Cloud position={[1., 2.5, 0]} />\n                    <Cloud position={[-3, 1, -2]} />\n                    <Cloud position={[2.5, 1, -0.3]} />\n                    <Cloud position={[0, 2, -0.5]} />\n\n                    {/**text geometry for 3D ritu rawat */}\n                    <mesh\n                        castShadow\n                        position={[-0.8, 0.35, 1.5]}\n                        rotation={[Math.PI / 6, Math.PI / 6, 0]}\n                    >\n                        <textGeometry args={['hello world', { font, size: 0.28, height: 0.1 }]} />\n                        <meshStandardMaterial\n                            attach=\"material\"\n                            metalness={[0.5]}\n                            roughness={[0.5]}\n                            color=\"#ffdf00\"\n                        />\n\n                    </mesh>\n                </Canvas>\n            </Suspense>\n\n        </>\n    );\n};\n\n\nexport default Home;"],"names":["rotation","position1","position2","args1","args2","receiveShadow","position","attach","args","metalness","roughness","color","scale","rockGeom","useMemo","THREE","rockMat","geometry","material","Math","PI","castShadow","wireframe","wireframeLinewidth","GradientTexture","stops","colors","size","CustomSinCurve","t","optionalTarget","tx","ty","sin","tz","set","multiplyScalar","this","path","path2","extend","TextGeometry","font","FontLoader","parse","ArchivoBlack","spinnerMat","Suspense","fallback","gl","antialias","alpha","style","height","colorManagement","shadows","dpr","window","devicePixelRatio","performance","min","intensity","angle","Sky","sunPosition","azimuth"],"sourceRoot":""}